package student_eduards_puzirevskis.lesson_9_interfaces.level_3_junior;

 class Task_9 {

     /*
     Найдите в интернете информацию про класс java.util.Optional.
Для чего применяются объекты этого класса?
Какие два состояния могут быть у объектов этого класса?
Как создаются экземпляры данного класса?
Как можно проверить в каком состоянии находится экземпляр данного класса?
Как можно получить объект, который находится внутри Optional?
      */


     /*
      Optional - новый класс в пакете java.util, является контейнером (оберткой)
      для значений которая также может безопасно содержать null.
      Благодаря опциональным типам можно забыть про проверки на null и NullPointerException.
      Класс Optional<T> это контейнерный объект, который может содержать или не содержать ненулевое значение.
      Если значение присутствует, isPresent() вернет true, а get() вернет значение.
      Предоставляются дополнительные методы, которые зависят от наличия или
      отсутствия содержащегося в нем значения, например orElse() (возвращает значение по умолчанию,
      если значение отсутствует) и ifPresent() (выполняет блок кода, если значение присутствует).

      Есть три метода для создания экземпляра Optional.

      1. static <T> Optional<T> empty() - Возвращает пустой экземпляр Optional.
      2. static <T> Optional<T> of(T value) - Возвращает Optional с переданным в качестве аргумента ненулевым значением.
      3. static <T> Optional<T> ofNullable(T value) - Возвращает экземпляр Optional, содержащий переданное значение,
      если оно не равно null, в противном случае возвращает пустой Optional.

      Для получения значения из Optional используется метод Optional.get,
      но он является небезопасным и может бросить NoSuchElementException


      */
}
